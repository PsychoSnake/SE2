#include "spi.h"
#include "gpio.h"
#include "LPC17xx.h"

void SPI_Init(int frequency, int bitData){
	LPC_PINCON->PINSEL0 = (1 << 14) | (1 << 12) | (1 << 8);
    LPC_SPIPI->CR = 0x24 | (1 << 3) | (1 << 4) | bitData << 8;
	int possibleFreq = CLK / frequency;
	if(possibleFreq < 8)
		possibleFreq = 8;
	else
		if(possibleFreq % 2 != 0)
			possibleFreq += 1;
	SPI->CCR = possibleFreq;
	unsigned char dummy;
	dummy = SPI->SR;
}

void SPI_BeginTransfer(int csBitId){ // verificar como o chipselect sera selecionado 
	GPIO_SetIOPin( csBitId, 0);
}

void SPI_EndTransfer(int csBitId){
	GPIO_SetIOPin( csBitId, 1);
}

void SPI_Transfer(unsigned short *txBuffer, unsigned short *rxBuffer, int lenght){
	int i;
	for (i = 0; i < lenght; i++) {
		SPI->DR = *txBuffer++; 	// load SPI transmiter register
		while (!(SPI->SR)); 	// wait for transmission to complete
		*rxBuffer++ = SPI->DR; 	// read data from SPI data register
	}
	return i;
}
