/**
* @file		eeprom.h
* @brief	Contains the eeprom API.
*     		It is intended to be used in ISO C conforming development
*     		environments and checks for this insofar as it is possible
*     		to do so.
* @author	Tiago Lopes
*
* Copyright(C) 2015, Tiago Lopes
* All rights reserved.
*
***********************************************************************
* Software that is described herein is for illustrative purposes only
* which provides customers with programming information regarding the
* products. This software is supplied "AS IS" without any warranties.
* NXP Semiconductors assumes no responsibility or liability for the
* use of the software, conveys no license or title under any patent,
* copyright, or mask work right to the product. NXP Semiconductors
* reserves the right to make changes in the software without
* notification. NXP Semiconductors also make no representation or
* warranty that such application will be suitable for the specified
* use without further testing or modification.
**********************************************************************/

/** @defgroup eeprom eeprom
 * @ingroup eeprom
 * This package provides the capabilty to write and read from peripheral 24LC256 (eeprom).
 * @{
 */

/** @defgroup EEPROM_Public_Functions EEPROM Public Functions
 * @{
 */

 /**
 * @brief	Initiate/configure the eeprom peripheral
 * @return  Nothing
 * @note	MUST be called before any other eeprom function
 */
void EEPROM_Init();

/**
* @brief   Starts a write operation to eeprom peripheral
* @param   buffer: string to be written
* @param   length: number of characters to be writen from buffer
* @return  returns -1 if buffer to big, or 0 if success
*/
int EEPROM_Write(char * buffer, int length);

/**
* @brief   Starts a read operation from eeprom peripheral
* @param   buffer: buffer to save the information to read
* @param   numberOfBytes: number of characters to be written to buffer or number of characters to be read
* @return  returns 0 if success
*/
int EEPROM_Read(char buffer [64], int numberOfBytes);

/**
 * @}
 */

/**
 * @}
 */
